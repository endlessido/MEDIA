//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_ADMINIST", "Administrator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.Administrator), "DonationProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.DonationProject), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_AREA_REFERENCE_COUNTRY", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.Country), "Area", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.Area), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_AREA", "Area", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.Area), "DonationProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.DonationProject), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_BLOG_REFERENCE_DONATION", "DonationProject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.DonationProject), "Blog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.Blog), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_USER_REFERENCE_COUNTRY", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.Country), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.User), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_DONATERE_REFERENCE_GOODIES", "Goody", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.Goody), "DonateRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.DonateRecord), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_DONATERE_REFERENCE_ORDERINF", "OrderInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.OrderInfo), "DonateRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.DonateRecord), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_DONATERE_REFERENCE_USER", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.User), "DonateRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.DonateRecord), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_DonateRecord_REFERENCE_DONATION", "DonationProject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.DonationProject), "DonateRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.DonateRecord), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_SPORTCAT", "SportCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.SportCategory), "DonationProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.DonationProject), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_USER", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.User), "DonationProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.DonationProject), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_GOODIES_REFERENCE_DONATION", "DonationProject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.DonationProject), "Goody", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.Goody), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_ORDERDET_REFERENCE_ORDERINF", "OrderInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.OrderInfo), "OrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.OrderDetail), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_ORDERDET_REFERENCE_PRODUCT", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.Product), "OrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.OrderDetail), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_ORDERINF_REFERENCE_USER", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.User), "OrderInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.OrderInfo), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_PRODUCT_REFERENCE_PRODUCTC", "ProductClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.ProductClass), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.Product), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_PRODUCTI_REFERENCE_PRODUCT", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.Product), "ProductInventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.ProductInventory), true)]
[assembly: EdmRelationshipAttribute("MediaSystemModel", "FK_SHOPCAR_REFERENCE_PRODUCT", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MEDIA.Model.Product), "ShopCar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MEDIA.Model.ShopCar), true)]

#endregion

namespace MEDIA.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Administrator> Administrators
        {
            get
            {
                if ((_Administrators == null))
                {
                    _Administrators = base.CreateObjectSet<Administrator>("Administrators");
                }
                return _Administrators;
            }
        }
        private ObjectSet<Administrator> _Administrators;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Area> Areas
        {
            get
            {
                if ((_Areas == null))
                {
                    _Areas = base.CreateObjectSet<Area>("Areas");
                }
                return _Areas;
            }
        }
        private ObjectSet<Area> _Areas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Blog> Blogs
        {
            get
            {
                if ((_Blogs == null))
                {
                    _Blogs = base.CreateObjectSet<Blog>("Blogs");
                }
                return _Blogs;
            }
        }
        private ObjectSet<Blog> _Blogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DonateRecord> DonateRecords
        {
            get
            {
                if ((_DonateRecords == null))
                {
                    _DonateRecords = base.CreateObjectSet<DonateRecord>("DonateRecords");
                }
                return _DonateRecords;
            }
        }
        private ObjectSet<DonateRecord> _DonateRecords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DonationProject> DonationProjects
        {
            get
            {
                if ((_DonationProjects == null))
                {
                    _DonationProjects = base.CreateObjectSet<DonationProject>("DonationProjects");
                }
                return _DonationProjects;
            }
        }
        private ObjectSet<DonationProject> _DonationProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Goody> Goodies
        {
            get
            {
                if ((_Goodies == null))
                {
                    _Goodies = base.CreateObjectSet<Goody>("Goodies");
                }
                return _Goodies;
            }
        }
        private ObjectSet<Goody> _Goodies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderDetail> OrderDetails
        {
            get
            {
                if ((_OrderDetails == null))
                {
                    _OrderDetails = base.CreateObjectSet<OrderDetail>("OrderDetails");
                }
                return _OrderDetails;
            }
        }
        private ObjectSet<OrderDetail> _OrderDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderInfo> OrderInfoes
        {
            get
            {
                if ((_OrderInfoes == null))
                {
                    _OrderInfoes = base.CreateObjectSet<OrderInfo>("OrderInfoes");
                }
                return _OrderInfoes;
            }
        }
        private ObjectSet<OrderInfo> _OrderInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductClass> ProductClasses
        {
            get
            {
                if ((_ProductClasses == null))
                {
                    _ProductClasses = base.CreateObjectSet<ProductClass>("ProductClasses");
                }
                return _ProductClasses;
            }
        }
        private ObjectSet<ProductClass> _ProductClasses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductInventory> ProductInventories
        {
            get
            {
                if ((_ProductInventories == null))
                {
                    _ProductInventories = base.CreateObjectSet<ProductInventory>("ProductInventories");
                }
                return _ProductInventories;
            }
        }
        private ObjectSet<ProductInventory> _ProductInventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShopCar> ShopCars
        {
            get
            {
                if ((_ShopCars == null))
                {
                    _ShopCars = base.CreateObjectSet<ShopCar>("ShopCars");
                }
                return _ShopCars;
            }
        }
        private ObjectSet<ShopCar> _ShopCars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SportCategory> SportCategories
        {
            get
            {
                if ((_SportCategories == null))
                {
                    _SportCategories = base.CreateObjectSet<SportCategory>("SportCategories");
                }
                return _SportCategories;
            }
        }
        private ObjectSet<SportCategory> _SportCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Administrators EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdministrators(Administrator administrator)
        {
            base.AddObject("Administrators", administrator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Areas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAreas(Area area)
        {
            base.AddObject("Areas", area);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Blogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogs(Blog blog)
        {
            base.AddObject("Blogs", blog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DonateRecords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDonateRecords(DonateRecord donateRecord)
        {
            base.AddObject("DonateRecords", donateRecord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DonationProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDonationProjects(DonationProject donationProject)
        {
            base.AddObject("DonationProjects", donationProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Goodies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoodies(Goody goody)
        {
            base.AddObject("Goodies", goody);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderDetails(OrderDetail orderDetail)
        {
            base.AddObject("OrderDetails", orderDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderInfoes(OrderInfo orderInfo)
        {
            base.AddObject("OrderInfoes", orderInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductClasses(ProductClass productClass)
        {
            base.AddObject("ProductClasses", productClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductInventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductInventories(ProductInventory productInventory)
        {
            base.AddObject("ProductInventories", productInventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ShopCars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShopCars(ShopCar shopCar)
        {
            base.AddObject("ShopCars", shopCar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportCategories(SportCategory sportCategory)
        {
            base.AddObject("SportCategories", sportCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="Administrator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Administrator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Administrator object.
        /// </summary>
        /// <param name="adminId">Initial value of the AdminId property.</param>
        public static Administrator CreateAdministrator(global::System.Int16 adminId)
        {
            Administrator administrator = new Administrator();
            administrator.AdminId = adminId;
            return administrator;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 AdminId
        {
            get
            {
                return _AdminId;
            }
            set
            {
                if (_AdminId != value)
                {
                    OnAdminIdChanging(value);
                    ReportPropertyChanging("AdminId");
                    _AdminId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdminId");
                    OnAdminIdChanged();
                }
            }
        }
        private global::System.Int16 _AdminId;
        partial void OnAdminIdChanging(global::System.Int16 value);
        partial void OnAdminIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdminName
        {
            get
            {
                return _AdminName;
            }
            set
            {
                OnAdminNameChanging(value);
                ReportPropertyChanging("AdminName");
                _AdminName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdminName");
                OnAdminNameChanged();
            }
        }
        private global::System.String _AdminName;
        partial void OnAdminNameChanging(global::System.String value);
        partial void OnAdminNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdminPwd
        {
            get
            {
                return _AdminPwd;
            }
            set
            {
                OnAdminPwdChanging(value);
                ReportPropertyChanging("AdminPwd");
                _AdminPwd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdminPwd");
                OnAdminPwdChanged();
            }
        }
        private global::System.String _AdminPwd;
        partial void OnAdminPwdChanging(global::System.String value);
        partial void OnAdminPwdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_ADMINIST", "DonationProject")]
        public EntityCollection<DonationProject> DonationProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonationProject>("MediaSystemModel.FK_DONATION_REFERENCE_ADMINIST", "DonationProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonationProject>("MediaSystemModel.FK_DONATION_REFERENCE_ADMINIST", "DonationProject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="Area")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Area : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Area object.
        /// </summary>
        /// <param name="areaId">Initial value of the AreaId property.</param>
        public static Area CreateArea(global::System.Int32 areaId)
        {
            Area area = new Area();
            area.AreaId = areaId;
            return area;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                if (_AreaId != value)
                {
                    OnAreaIdChanging(value);
                    ReportPropertyChanging("AreaId");
                    _AreaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AreaId");
                    OnAreaIdChanged();
                }
            }
        }
        private global::System.Int32 _AreaId;
        partial void OnAreaIdChanging(global::System.Int32 value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaName
        {
            get
            {
                return _AreaName;
            }
            set
            {
                OnAreaNameChanging(value);
                ReportPropertyChanging("AreaName");
                _AreaName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaName");
                OnAreaNameChanged();
            }
        }
        private global::System.String _AreaName;
        partial void OnAreaNameChanging(global::System.String value);
        partial void OnAreaNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDel
        {
            get
            {
                return _IsDel;
            }
            set
            {
                OnIsDelChanging(value);
                ReportPropertyChanging("IsDel");
                _IsDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDel");
                OnIsDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDel;
        partial void OnIsDelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_AREA_REFERENCE_COUNTRY", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaSystemModel.FK_AREA_REFERENCE_COUNTRY", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaSystemModel.FK_AREA_REFERENCE_COUNTRY", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaSystemModel.FK_AREA_REFERENCE_COUNTRY", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("MediaSystemModel.FK_AREA_REFERENCE_COUNTRY", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_AREA", "DonationProject")]
        public EntityCollection<DonationProject> DonationProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonationProject>("MediaSystemModel.FK_DONATION_REFERENCE_AREA", "DonationProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonationProject>("MediaSystemModel.FK_DONATION_REFERENCE_AREA", "DonationProject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="Blog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Blog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Blog object.
        /// </summary>
        /// <param name="blogId">Initial value of the blogId property.</param>
        public static Blog CreateBlog(global::System.Int32 blogId)
        {
            Blog blog = new Blog();
            blog.blogId = blogId;
            return blog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 blogId
        {
            get
            {
                return _blogId;
            }
            set
            {
                if (_blogId != value)
                {
                    OnblogIdChanging(value);
                    ReportPropertyChanging("blogId");
                    _blogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("blogId");
                    OnblogIdChanged();
                }
            }
        }
        private global::System.Int32 _blogId;
        partial void OnblogIdChanging(global::System.Int32 value);
        partial void OnblogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectId;
        partial void OnProjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImgUrl
        {
            get
            {
                return _ImgUrl;
            }
            set
            {
                OnImgUrlChanging(value);
                ReportPropertyChanging("ImgUrl");
                _ImgUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImgUrl");
                OnImgUrlChanged();
            }
        }
        private global::System.String _ImgUrl;
        partial void OnImgUrlChanging(global::System.String value);
        partial void OnImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCheck
        {
            get
            {
                return _IsCheck;
            }
            set
            {
                OnIsCheckChanging(value);
                ReportPropertyChanging("IsCheck");
                _IsCheck = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCheck");
                OnIsCheckChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCheck;
        partial void OnIsCheckChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCheckChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_BLOG_REFERENCE_DONATION", "DonationProject")]
        public DonationProject DonationProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DonationProject>("MediaSystemModel.FK_BLOG_REFERENCE_DONATION", "DonationProject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DonationProject>("MediaSystemModel.FK_BLOG_REFERENCE_DONATION", "DonationProject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DonationProject> DonationProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DonationProject>("MediaSystemModel.FK_BLOG_REFERENCE_DONATION", "DonationProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DonationProject>("MediaSystemModel.FK_BLOG_REFERENCE_DONATION", "DonationProject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        public static Country CreateCountry(global::System.Int32 countryId)
        {
            Country country = new Country();
            country.CountryId = countryId;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDel
        {
            get
            {
                return _IsDel;
            }
            set
            {
                OnIsDelChanging(value);
                ReportPropertyChanging("IsDel");
                _IsDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDel");
                OnIsDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDel;
        partial void OnIsDelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_AREA_REFERENCE_COUNTRY", "Area")]
        public EntityCollection<Area> Areas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Area>("MediaSystemModel.FK_AREA_REFERENCE_COUNTRY", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Area>("MediaSystemModel.FK_AREA_REFERENCE_COUNTRY", "Area", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_USER_REFERENCE_COUNTRY", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("MediaSystemModel.FK_USER_REFERENCE_COUNTRY", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("MediaSystemModel.FK_USER_REFERENCE_COUNTRY", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="DonateRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DonateRecord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DonateRecord object.
        /// </summary>
        /// <param name="recordId">Initial value of the RecordId property.</param>
        public static DonateRecord CreateDonateRecord(global::System.Int32 recordId)
        {
            DonateRecord donateRecord = new DonateRecord();
            donateRecord.RecordId = recordId;
            return donateRecord;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordId
        {
            get
            {
                return _RecordId;
            }
            set
            {
                if (_RecordId != value)
                {
                    OnRecordIdChanging(value);
                    ReportPropertyChanging("RecordId");
                    _RecordId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecordId");
                    OnRecordIdChanged();
                }
            }
        }
        private global::System.Int32 _RecordId;
        partial void OnRecordIdChanging(global::System.Int32 value);
        partial void OnRecordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Id;
        partial void OnIdChanging(Nullable<global::System.Int32> value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DonateFunding
        {
            get
            {
                return _DonateFunding;
            }
            set
            {
                OnDonateFundingChanging(value);
                ReportPropertyChanging("DonateFunding");
                _DonateFunding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DonateFunding");
                OnDonateFundingChanged();
            }
        }
        private Nullable<global::System.Decimal> _DonateFunding;
        partial void OnDonateFundingChanging(Nullable<global::System.Decimal> value);
        partial void OnDonateFundingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DonateDate
        {
            get
            {
                return _DonateDate;
            }
            set
            {
                OnDonateDateChanging(value);
                ReportPropertyChanging("DonateDate");
                _DonateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DonateDate");
                OnDonateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DonateDate;
        partial void OnDonateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDonateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPayment
        {
            get
            {
                return _IsPayment;
            }
            set
            {
                OnIsPaymentChanging(value);
                ReportPropertyChanging("IsPayment");
                _IsPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPayment");
                OnIsPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPayment;
        partial void OnIsPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrencyStr
        {
            get
            {
                return _CurrencyStr;
            }
            set
            {
                OnCurrencyStrChanging(value);
                ReportPropertyChanging("CurrencyStr");
                _CurrencyStr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrencyStr");
                OnCurrencyStrChanged();
            }
        }
        private global::System.String _CurrencyStr;
        partial void OnCurrencyStrChanging(global::System.String value);
        partial void OnCurrencyStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                OnOrderIdChanging(value);
                ReportPropertyChanging("OrderId");
                _OrderId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderId");
                OnOrderIdChanged();
            }
        }
        private global::System.String _OrderId;
        partial void OnOrderIdChanging(global::System.String value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectId;
        partial void OnProjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATERE_REFERENCE_GOODIES", "Goody")]
        public Goody Goody
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Goody>("MediaSystemModel.FK_DONATERE_REFERENCE_GOODIES", "Goody").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Goody>("MediaSystemModel.FK_DONATERE_REFERENCE_GOODIES", "Goody").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Goody> GoodyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Goody>("MediaSystemModel.FK_DONATERE_REFERENCE_GOODIES", "Goody");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Goody>("MediaSystemModel.FK_DONATERE_REFERENCE_GOODIES", "Goody", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATERE_REFERENCE_ORDERINF", "OrderInfo")]
        public OrderInfo OrderInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderInfo>("MediaSystemModel.FK_DONATERE_REFERENCE_ORDERINF", "OrderInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderInfo>("MediaSystemModel.FK_DONATERE_REFERENCE_ORDERINF", "OrderInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderInfo> OrderInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderInfo>("MediaSystemModel.FK_DONATERE_REFERENCE_ORDERINF", "OrderInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderInfo>("MediaSystemModel.FK_DONATERE_REFERENCE_ORDERINF", "OrderInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATERE_REFERENCE_USER", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaSystemModel.FK_DONATERE_REFERENCE_USER", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaSystemModel.FK_DONATERE_REFERENCE_USER", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaSystemModel.FK_DONATERE_REFERENCE_USER", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MediaSystemModel.FK_DONATERE_REFERENCE_USER", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DonateRecord_REFERENCE_DONATION", "DonationProject")]
        public DonationProject DonationProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DonationProject>("MediaSystemModel.FK_DonateRecord_REFERENCE_DONATION", "DonationProject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DonationProject>("MediaSystemModel.FK_DonateRecord_REFERENCE_DONATION", "DonationProject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DonationProject> DonationProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DonationProject>("MediaSystemModel.FK_DonateRecord_REFERENCE_DONATION", "DonationProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DonationProject>("MediaSystemModel.FK_DonateRecord_REFERENCE_DONATION", "DonationProject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="DonationProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DonationProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DonationProject object.
        /// </summary>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        public static DonationProject CreateDonationProject(global::System.Int32 projectId)
        {
            DonationProject donationProject = new DonationProject();
            donationProject.ProjectId = projectId;
            return donationProject;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                if (_ProjectId != value)
                {
                    OnProjectIdChanging(value);
                    ReportPropertyChanging("ProjectId");
                    _ProjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectId");
                    OnProjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> AdminId
        {
            get
            {
                return _AdminId;
            }
            set
            {
                OnAdminIdChanging(value);
                ReportPropertyChanging("AdminId");
                _AdminId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdminId");
                OnAdminIdChanged();
            }
        }
        private Nullable<global::System.Int16> _AdminId;
        partial void OnAdminIdChanging(Nullable<global::System.Int16> value);
        partial void OnAdminIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AreaId;
        partial void OnAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YoutubeUrl
        {
            get
            {
                return _YoutubeUrl;
            }
            set
            {
                OnYoutubeUrlChanging(value);
                ReportPropertyChanging("YoutubeUrl");
                _YoutubeUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YoutubeUrl");
                OnYoutubeUrlChanged();
            }
        }
        private global::System.String _YoutubeUrl;
        partial void OnYoutubeUrlChanging(global::System.String value);
        partial void OnYoutubeUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectSummary
        {
            get
            {
                return _ProjectSummary;
            }
            set
            {
                OnProjectSummaryChanging(value);
                ReportPropertyChanging("ProjectSummary");
                _ProjectSummary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProjectSummary");
                OnProjectSummaryChanged();
            }
        }
        private global::System.String _ProjectSummary;
        partial void OnProjectSummaryChanging(global::System.String value);
        partial void OnProjectSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Need
        {
            get
            {
                return _Need;
            }
            set
            {
                OnNeedChanging(value);
                ReportPropertyChanging("Need");
                _Need = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Need");
                OnNeedChanged();
            }
        }
        private global::System.String _Need;
        partial void OnNeedChanging(global::System.String value);
        partial void OnNeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NeedReason
        {
            get
            {
                return _NeedReason;
            }
            set
            {
                OnNeedReasonChanging(value);
                ReportPropertyChanging("NeedReason");
                _NeedReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NeedReason");
                OnNeedReasonChanged();
            }
        }
        private global::System.String _NeedReason;
        partial void OnNeedReasonChanging(global::System.String value);
        partial void OnNeedReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaName
        {
            get
            {
                return _AreaName;
            }
            set
            {
                OnAreaNameChanging(value);
                ReportPropertyChanging("AreaName");
                _AreaName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaName");
                OnAreaNameChanged();
            }
        }
        private global::System.String _AreaName;
        partial void OnAreaNameChanging(global::System.String value);
        partial void OnAreaNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SelfIntroduce
        {
            get
            {
                return _SelfIntroduce;
            }
            set
            {
                OnSelfIntroduceChanging(value);
                ReportPropertyChanging("SelfIntroduce");
                _SelfIntroduce = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SelfIntroduce");
                OnSelfIntroduceChanged();
            }
        }
        private global::System.String _SelfIntroduce;
        partial void OnSelfIntroduceChanging(global::System.String value);
        partial void OnSelfIntroduceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String YourVision
        {
            get
            {
                return _YourVision;
            }
            set
            {
                OnYourVisionChanging(value);
                ReportPropertyChanging("YourVision");
                _YourVision = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("YourVision");
                OnYourVisionChanged();
            }
        }
        private global::System.String _YourVision;
        partial void OnYourVisionChanging(global::System.String value);
        partial void OnYourVisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Homepage
        {
            get
            {
                return _Homepage;
            }
            set
            {
                OnHomepageChanging(value);
                ReportPropertyChanging("Homepage");
                _Homepage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Homepage");
                OnHomepageChanged();
            }
        }
        private global::System.String _Homepage;
        partial void OnHomepageChanging(global::System.String value);
        partial void OnHomepageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Feedbookpage
        {
            get
            {
                return _Feedbookpage;
            }
            set
            {
                OnFeedbookpageChanging(value);
                ReportPropertyChanging("Feedbookpage");
                _Feedbookpage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Feedbookpage");
                OnFeedbookpageChanged();
            }
        }
        private global::System.String _Feedbookpage;
        partial void OnFeedbookpageChanging(global::System.String value);
        partial void OnFeedbookpageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalFunding
        {
            get
            {
                return _TotalFunding;
            }
            set
            {
                OnTotalFundingChanging(value);
                ReportPropertyChanging("TotalFunding");
                _TotalFunding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalFunding");
                OnTotalFundingChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalFunding;
        partial void OnTotalFundingChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalFundingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReceivedFunding
        {
            get
            {
                return _ReceivedFunding;
            }
            set
            {
                OnReceivedFundingChanging(value);
                ReportPropertyChanging("ReceivedFunding");
                _ReceivedFunding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedFunding");
                OnReceivedFundingChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReceivedFunding;
        partial void OnReceivedFundingChanging(Nullable<global::System.Decimal> value);
        partial void OnReceivedFundingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImgUrl
        {
            get
            {
                return _ImgUrl;
            }
            set
            {
                OnImgUrlChanging(value);
                ReportPropertyChanging("ImgUrl");
                _ImgUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImgUrl");
                OnImgUrlChanged();
            }
        }
        private global::System.String _ImgUrl;
        partial void OnImgUrlChanging(global::System.String value);
        partial void OnImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSendNews
        {
            get
            {
                return _IsSendNews;
            }
            set
            {
                OnIsSendNewsChanging(value);
                ReportPropertyChanging("IsSendNews");
                _IsSendNews = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSendNews");
                OnIsSendNewsChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSendNews;
        partial void OnIsSendNewsChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSendNewsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrencyStr
        {
            get
            {
                return _CurrencyStr;
            }
            set
            {
                OnCurrencyStrChanging(value);
                ReportPropertyChanging("CurrencyStr");
                _CurrencyStr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrencyStr");
                OnCurrencyStrChanged();
            }
        }
        private global::System.String _CurrencyStr;
        partial void OnCurrencyStrChanging(global::System.String value);
        partial void OnCurrencyStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCheck
        {
            get
            {
                return _IsCheck;
            }
            set
            {
                OnIsCheckChanging(value);
                ReportPropertyChanging("IsCheck");
                _IsCheck = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCheck");
                OnIsCheckChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCheck;
        partial void OnIsCheckChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCheckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DonateNum
        {
            get
            {
                return _DonateNum;
            }
            set
            {
                OnDonateNumChanging(value);
                ReportPropertyChanging("DonateNum");
                _DonateNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DonateNum");
                OnDonateNumChanged();
            }
        }
        private Nullable<global::System.Int32> _DonateNum;
        partial void OnDonateNumChanging(Nullable<global::System.Int32> value);
        partial void OnDonateNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsFinished
        {
            get
            {
                return _IsFinished;
            }
            set
            {
                OnIsFinishedChanging(value);
                ReportPropertyChanging("IsFinished");
                _IsFinished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFinished");
                OnIsFinishedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsFinished;
        partial void OnIsFinishedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsFinishedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_ADMINIST", "Administrator")]
        public Administrator Administrator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Administrator>("MediaSystemModel.FK_DONATION_REFERENCE_ADMINIST", "Administrator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Administrator>("MediaSystemModel.FK_DONATION_REFERENCE_ADMINIST", "Administrator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Administrator> AdministratorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Administrator>("MediaSystemModel.FK_DONATION_REFERENCE_ADMINIST", "Administrator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Administrator>("MediaSystemModel.FK_DONATION_REFERENCE_ADMINIST", "Administrator", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_AREA", "Area")]
        public Area Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("MediaSystemModel.FK_DONATION_REFERENCE_AREA", "Area").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("MediaSystemModel.FK_DONATION_REFERENCE_AREA", "Area").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Area> AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("MediaSystemModel.FK_DONATION_REFERENCE_AREA", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Area>("MediaSystemModel.FK_DONATION_REFERENCE_AREA", "Area", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_BLOG_REFERENCE_DONATION", "Blog")]
        public EntityCollection<Blog> Blogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Blog>("MediaSystemModel.FK_BLOG_REFERENCE_DONATION", "Blog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Blog>("MediaSystemModel.FK_BLOG_REFERENCE_DONATION", "Blog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DonateRecord_REFERENCE_DONATION", "DonateRecord")]
        public EntityCollection<DonateRecord> DonateRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonateRecord>("MediaSystemModel.FK_DonateRecord_REFERENCE_DONATION", "DonateRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonateRecord>("MediaSystemModel.FK_DonateRecord_REFERENCE_DONATION", "DonateRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_SPORTCAT", "SportCategory")]
        public SportCategory SportCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportCategory>("MediaSystemModel.FK_DONATION_REFERENCE_SPORTCAT", "SportCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportCategory>("MediaSystemModel.FK_DONATION_REFERENCE_SPORTCAT", "SportCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportCategory> SportCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportCategory>("MediaSystemModel.FK_DONATION_REFERENCE_SPORTCAT", "SportCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportCategory>("MediaSystemModel.FK_DONATION_REFERENCE_SPORTCAT", "SportCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_USER", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaSystemModel.FK_DONATION_REFERENCE_USER", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaSystemModel.FK_DONATION_REFERENCE_USER", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaSystemModel.FK_DONATION_REFERENCE_USER", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MediaSystemModel.FK_DONATION_REFERENCE_USER", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_GOODIES_REFERENCE_DONATION", "Goody")]
        public EntityCollection<Goody> Goodies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Goody>("MediaSystemModel.FK_GOODIES_REFERENCE_DONATION", "Goody");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Goody>("MediaSystemModel.FK_GOODIES_REFERENCE_DONATION", "Goody", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="Goody")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Goody : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Goody object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Goody CreateGoody(global::System.Int32 id)
        {
            Goody goody = new Goody();
            goody.Id = id;
            return goody;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectId;
        partial void OnProjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Num
        {
            get
            {
                return _Num;
            }
            set
            {
                OnNumChanging(value);
                ReportPropertyChanging("Num");
                _Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Num");
                OnNumChanged();
            }
        }
        private Nullable<global::System.Int32> _Num;
        partial void OnNumChanging(Nullable<global::System.Int32> value);
        partial void OnNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrencyStr
        {
            get
            {
                return _CurrencyStr;
            }
            set
            {
                OnCurrencyStrChanging(value);
                ReportPropertyChanging("CurrencyStr");
                _CurrencyStr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrencyStr");
                OnCurrencyStrChanged();
            }
        }
        private global::System.String _CurrencyStr;
        partial void OnCurrencyStrChanging(global::System.String value);
        partial void OnCurrencyStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SaleNum
        {
            get
            {
                return _SaleNum;
            }
            set
            {
                OnSaleNumChanging(value);
                ReportPropertyChanging("SaleNum");
                _SaleNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleNum");
                OnSaleNumChanged();
            }
        }
        private Nullable<global::System.Int32> _SaleNum;
        partial void OnSaleNumChanging(Nullable<global::System.Int32> value);
        partial void OnSaleNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLimit
        {
            get
            {
                return _IsLimit;
            }
            set
            {
                OnIsLimitChanging(value);
                ReportPropertyChanging("IsLimit");
                _IsLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLimit");
                OnIsLimitChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLimit;
        partial void OnIsLimitChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLimitChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATERE_REFERENCE_GOODIES", "DonateRecord")]
        public EntityCollection<DonateRecord> DonateRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonateRecord>("MediaSystemModel.FK_DONATERE_REFERENCE_GOODIES", "DonateRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonateRecord>("MediaSystemModel.FK_DONATERE_REFERENCE_GOODIES", "DonateRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_GOODIES_REFERENCE_DONATION", "DonationProject")]
        public DonationProject DonationProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DonationProject>("MediaSystemModel.FK_GOODIES_REFERENCE_DONATION", "DonationProject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DonationProject>("MediaSystemModel.FK_GOODIES_REFERENCE_DONATION", "DonationProject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DonationProject> DonationProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DonationProject>("MediaSystemModel.FK_GOODIES_REFERENCE_DONATION", "DonationProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DonationProject>("MediaSystemModel.FK_GOODIES_REFERENCE_DONATION", "DonationProject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="OrderDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderDetail object.
        /// </summary>
        /// <param name="buyId">Initial value of the BuyId property.</param>
        public static OrderDetail CreateOrderDetail(global::System.Int32 buyId)
        {
            OrderDetail orderDetail = new OrderDetail();
            orderDetail.BuyId = buyId;
            return orderDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuyId
        {
            get
            {
                return _BuyId;
            }
            set
            {
                if (_BuyId != value)
                {
                    OnBuyIdChanging(value);
                    ReportPropertyChanging("BuyId");
                    _BuyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BuyId");
                    OnBuyIdChanged();
                }
            }
        }
        private global::System.Int32 _BuyId;
        partial void OnBuyIdChanging(global::System.Int32 value);
        partial void OnBuyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductId;
        partial void OnProductIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                OnOrderIdChanging(value);
                ReportPropertyChanging("OrderId");
                _OrderId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderId");
                OnOrderIdChanged();
            }
        }
        private global::System.String _OrderId;
        partial void OnOrderIdChanging(global::System.String value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Num
        {
            get
            {
                return _Num;
            }
            set
            {
                OnNumChanging(value);
                ReportPropertyChanging("Num");
                _Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Num");
                OnNumChanged();
            }
        }
        private Nullable<global::System.Int16> _Num;
        partial void OnNumChanging(Nullable<global::System.Int16> value);
        partial void OnNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JsonMark
        {
            get
            {
                return _JsonMark;
            }
            set
            {
                OnJsonMarkChanging(value);
                ReportPropertyChanging("JsonMark");
                _JsonMark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JsonMark");
                OnJsonMarkChanged();
            }
        }
        private global::System.String _JsonMark;
        partial void OnJsonMarkChanging(global::System.String value);
        partial void OnJsonMarkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_ORDERDET_REFERENCE_ORDERINF", "OrderInfo")]
        public OrderInfo OrderInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderInfo>("MediaSystemModel.FK_ORDERDET_REFERENCE_ORDERINF", "OrderInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderInfo>("MediaSystemModel.FK_ORDERDET_REFERENCE_ORDERINF", "OrderInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderInfo> OrderInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderInfo>("MediaSystemModel.FK_ORDERDET_REFERENCE_ORDERINF", "OrderInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderInfo>("MediaSystemModel.FK_ORDERDET_REFERENCE_ORDERINF", "OrderInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_ORDERDET_REFERENCE_PRODUCT", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("MediaSystemModel.FK_ORDERDET_REFERENCE_PRODUCT", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("MediaSystemModel.FK_ORDERDET_REFERENCE_PRODUCT", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("MediaSystemModel.FK_ORDERDET_REFERENCE_PRODUCT", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("MediaSystemModel.FK_ORDERDET_REFERENCE_PRODUCT", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="OrderInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderInfo object.
        /// </summary>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        public static OrderInfo CreateOrderInfo(global::System.String orderId)
        {
            OrderInfo orderInfo = new OrderInfo();
            orderInfo.OrderId = orderId;
            return orderInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                if (_OrderId != value)
                {
                    OnOrderIdChanging(value);
                    ReportPropertyChanging("OrderId");
                    _OrderId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("OrderId");
                    OnOrderIdChanged();
                }
            }
        }
        private global::System.String _OrderId;
        partial void OnOrderIdChanging(global::System.String value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OrderDate;
        partial void OnOrderDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalPrice
        {
            get
            {
                return _TotalPrice;
            }
            set
            {
                OnTotalPriceChanging(value);
                ReportPropertyChanging("TotalPrice");
                _TotalPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPrice");
                OnTotalPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalPrice;
        partial void OnTotalPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayType
        {
            get
            {
                return _PayType;
            }
            set
            {
                OnPayTypeChanging(value);
                ReportPropertyChanging("PayType");
                _PayType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayType");
                OnPayTypeChanged();
            }
        }
        private global::System.String _PayType;
        partial void OnPayTypeChanging(global::System.String value);
        partial void OnPayTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPayment
        {
            get
            {
                return _IsPayment;
            }
            set
            {
                OnIsPaymentChanging(value);
                ReportPropertyChanging("IsPayment");
                _IsPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPayment");
                OnIsPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPayment;
        partial void OnIsPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceiverName
        {
            get
            {
                return _ReceiverName;
            }
            set
            {
                OnReceiverNameChanging(value);
                ReportPropertyChanging("ReceiverName");
                _ReceiverName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceiverName");
                OnReceiverNameChanged();
            }
        }
        private global::System.String _ReceiverName;
        partial void OnReceiverNameChanging(global::System.String value);
        partial void OnReceiverNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceiverPhone
        {
            get
            {
                return _ReceiverPhone;
            }
            set
            {
                OnReceiverPhoneChanging(value);
                ReportPropertyChanging("ReceiverPhone");
                _ReceiverPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceiverPhone");
                OnReceiverPhoneChanged();
            }
        }
        private global::System.String _ReceiverPhone;
        partial void OnReceiverPhoneChanging(global::System.String value);
        partial void OnReceiverPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceiverAddress
        {
            get
            {
                return _ReceiverAddress;
            }
            set
            {
                OnReceiverAddressChanging(value);
                ReportPropertyChanging("ReceiverAddress");
                _ReceiverAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceiverAddress");
                OnReceiverAddressChanged();
            }
        }
        private global::System.String _ReceiverAddress;
        partial void OnReceiverAddressChanging(global::System.String value);
        partial void OnReceiverAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrencyStr
        {
            get
            {
                return _CurrencyStr;
            }
            set
            {
                OnCurrencyStrChanging(value);
                ReportPropertyChanging("CurrencyStr");
                _CurrencyStr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrencyStr");
                OnCurrencyStrChanged();
            }
        }
        private global::System.String _CurrencyStr;
        partial void OnCurrencyStrChanging(global::System.String value);
        partial void OnCurrencyStrChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATERE_REFERENCE_ORDERINF", "DonateRecord")]
        public EntityCollection<DonateRecord> DonateRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonateRecord>("MediaSystemModel.FK_DONATERE_REFERENCE_ORDERINF", "DonateRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonateRecord>("MediaSystemModel.FK_DONATERE_REFERENCE_ORDERINF", "DonateRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_ORDERDET_REFERENCE_ORDERINF", "OrderDetail")]
        public EntityCollection<OrderDetail> OrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderDetail>("MediaSystemModel.FK_ORDERDET_REFERENCE_ORDERINF", "OrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderDetail>("MediaSystemModel.FK_ORDERDET_REFERENCE_ORDERINF", "OrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_ORDERINF_REFERENCE_USER", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaSystemModel.FK_ORDERINF_REFERENCE_USER", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaSystemModel.FK_ORDERINF_REFERENCE_USER", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaSystemModel.FK_ORDERINF_REFERENCE_USER", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MediaSystemModel.FK_ORDERINF_REFERENCE_USER", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static Product CreateProduct(global::System.Int32 productId)
        {
            Product product = new Product();
            product.ProductId = productId;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private Nullable<global::System.Int16> _ClassId;
        partial void OnClassIdChanging(Nullable<global::System.Int16> value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_ORDERDET_REFERENCE_PRODUCT", "OrderDetail")]
        public EntityCollection<OrderDetail> OrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderDetail>("MediaSystemModel.FK_ORDERDET_REFERENCE_PRODUCT", "OrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderDetail>("MediaSystemModel.FK_ORDERDET_REFERENCE_PRODUCT", "OrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_PRODUCT_REFERENCE_PRODUCTC", "ProductClass")]
        public ProductClass ProductClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductClass>("MediaSystemModel.FK_PRODUCT_REFERENCE_PRODUCTC", "ProductClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductClass>("MediaSystemModel.FK_PRODUCT_REFERENCE_PRODUCTC", "ProductClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductClass> ProductClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductClass>("MediaSystemModel.FK_PRODUCT_REFERENCE_PRODUCTC", "ProductClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductClass>("MediaSystemModel.FK_PRODUCT_REFERENCE_PRODUCTC", "ProductClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_PRODUCTI_REFERENCE_PRODUCT", "ProductInventory")]
        public EntityCollection<ProductInventory> ProductInventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductInventory>("MediaSystemModel.FK_PRODUCTI_REFERENCE_PRODUCT", "ProductInventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductInventory>("MediaSystemModel.FK_PRODUCTI_REFERENCE_PRODUCT", "ProductInventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_SHOPCAR_REFERENCE_PRODUCT", "ShopCar")]
        public EntityCollection<ShopCar> ShopCars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShopCar>("MediaSystemModel.FK_SHOPCAR_REFERENCE_PRODUCT", "ShopCar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShopCar>("MediaSystemModel.FK_SHOPCAR_REFERENCE_PRODUCT", "ShopCar", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="ProductClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductClass object.
        /// </summary>
        /// <param name="classId">Initial value of the ClassId property.</param>
        public static ProductClass CreateProductClass(global::System.Int16 classId)
        {
            ProductClass productClass = new ProductClass();
            productClass.ClassId = classId;
            return productClass;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                if (_ClassId != value)
                {
                    OnClassIdChanging(value);
                    ReportPropertyChanging("ClassId");
                    _ClassId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClassId");
                    OnClassIdChanged();
                }
            }
        }
        private global::System.Int16 _ClassId;
        partial void OnClassIdChanging(global::System.Int16 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                OnClassNameChanging(value);
                ReportPropertyChanging("ClassName");
                _ClassName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassName");
                OnClassNameChanged();
            }
        }
        private global::System.String _ClassName;
        partial void OnClassNameChanging(global::System.String value);
        partial void OnClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> FatherClassId
        {
            get
            {
                return _FatherClassId;
            }
            set
            {
                OnFatherClassIdChanging(value);
                ReportPropertyChanging("FatherClassId");
                _FatherClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FatherClassId");
                OnFatherClassIdChanged();
            }
        }
        private Nullable<global::System.Int16> _FatherClassId;
        partial void OnFatherClassIdChanging(Nullable<global::System.Int16> value);
        partial void OnFatherClassIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_PRODUCT_REFERENCE_PRODUCTC", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("MediaSystemModel.FK_PRODUCT_REFERENCE_PRODUCTC", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("MediaSystemModel.FK_PRODUCT_REFERENCE_PRODUCTC", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="ProductInventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductInventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductInventory object.
        /// </summary>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        public static ProductInventory CreateProductInventory(global::System.Int32 inventoryId)
        {
            ProductInventory productInventory = new ProductInventory();
            productInventory.InventoryId = inventoryId;
            return productInventory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                if (_InventoryId != value)
                {
                    OnInventoryIdChanging(value);
                    ReportPropertyChanging("InventoryId");
                    _InventoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InventoryId");
                    OnInventoryIdChanged();
                }
            }
        }
        private global::System.Int32 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int32 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductId;
        partial void OnProductIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InventoryQuantity
        {
            get
            {
                return _InventoryQuantity;
            }
            set
            {
                OnInventoryQuantityChanging(value);
                ReportPropertyChanging("InventoryQuantity");
                _InventoryQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryQuantity");
                OnInventoryQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _InventoryQuantity;
        partial void OnInventoryQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnInventoryQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_PRODUCTI_REFERENCE_PRODUCT", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("MediaSystemModel.FK_PRODUCTI_REFERENCE_PRODUCT", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("MediaSystemModel.FK_PRODUCTI_REFERENCE_PRODUCT", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("MediaSystemModel.FK_PRODUCTI_REFERENCE_PRODUCT", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("MediaSystemModel.FK_PRODUCTI_REFERENCE_PRODUCT", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="ShopCar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShopCar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ShopCar object.
        /// </summary>
        /// <param name="carId">Initial value of the CarId property.</param>
        public static ShopCar CreateShopCar(global::System.Int32 carId)
        {
            ShopCar shopCar = new ShopCar();
            shopCar.CarId = carId;
            return shopCar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarId
        {
            get
            {
                return _CarId;
            }
            set
            {
                if (_CarId != value)
                {
                    OnCarIdChanging(value);
                    ReportPropertyChanging("CarId");
                    _CarId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarId");
                    OnCarIdChanged();
                }
            }
        }
        private global::System.Int32 _CarId;
        partial void OnCarIdChanging(global::System.Int32 value);
        partial void OnCarIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductId;
        partial void OnProductIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Num
        {
            get
            {
                return _Num;
            }
            set
            {
                OnNumChanging(value);
                ReportPropertyChanging("Num");
                _Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Num");
                OnNumChanged();
            }
        }
        private Nullable<global::System.Int32> _Num;
        partial void OnNumChanging(Nullable<global::System.Int32> value);
        partial void OnNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JsonMark
        {
            get
            {
                return _JsonMark;
            }
            set
            {
                OnJsonMarkChanging(value);
                ReportPropertyChanging("JsonMark");
                _JsonMark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JsonMark");
                OnJsonMarkChanged();
            }
        }
        private global::System.String _JsonMark;
        partial void OnJsonMarkChanging(global::System.String value);
        partial void OnJsonMarkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_SHOPCAR_REFERENCE_PRODUCT", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("MediaSystemModel.FK_SHOPCAR_REFERENCE_PRODUCT", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("MediaSystemModel.FK_SHOPCAR_REFERENCE_PRODUCT", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("MediaSystemModel.FK_SHOPCAR_REFERENCE_PRODUCT", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("MediaSystemModel.FK_SHOPCAR_REFERENCE_PRODUCT", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="SportCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SportCategory object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        public static SportCategory CreateSportCategory(global::System.Int32 categoryId)
        {
            SportCategory sportCategory = new SportCategory();
            sportCategory.CategoryId = categoryId;
            return sportCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDel
        {
            get
            {
                return _IsDel;
            }
            set
            {
                OnIsDelChanging(value);
                ReportPropertyChanging("IsDel");
                _IsDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDel");
                OnIsDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDel;
        partial void OnIsDelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_SPORTCAT", "DonationProject")]
        public EntityCollection<DonationProject> DonationProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonationProject>("MediaSystemModel.FK_DONATION_REFERENCE_SPORTCAT", "DonationProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonationProject>("MediaSystemModel.FK_DONATION_REFERENCE_SPORTCAT", "DonationProject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaSystemModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static User CreateUser(global::System.Int32 userId)
        {
            User user = new User();
            user.UserId = userId;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginPwd
        {
            get
            {
                return _LoginPwd;
            }
            set
            {
                OnLoginPwdChanging(value);
                ReportPropertyChanging("LoginPwd");
                _LoginPwd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginPwd");
                OnLoginPwdChanged();
            }
        }
        private global::System.String _LoginPwd;
        partial void OnLoginPwdChanging(global::System.String value);
        partial void OnLoginPwdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private Nullable<global::System.Boolean> _Gender;
        partial void OnGenderChanging(Nullable<global::System.Boolean> value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Town
        {
            get
            {
                return _Town;
            }
            set
            {
                OnTownChanging(value);
                ReportPropertyChanging("Town");
                _Town = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Town");
                OnTownChanged();
            }
        }
        private global::System.String _Town;
        partial void OnTownChanging(global::System.String value);
        partial void OnTownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCheck
        {
            get
            {
                return _IsCheck;
            }
            set
            {
                OnIsCheckChanging(value);
                ReportPropertyChanging("IsCheck");
                _IsCheck = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCheck");
                OnIsCheckChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCheck;
        partial void OnIsCheckChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCheckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ActiveKey
        {
            get
            {
                return _ActiveKey;
            }
            set
            {
                OnActiveKeyChanging(value);
                ReportPropertyChanging("ActiveKey");
                _ActiveKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveKey");
                OnActiveKeyChanged();
            }
        }
        private Nullable<global::System.Guid> _ActiveKey;
        partial void OnActiveKeyChanging(Nullable<global::System.Guid> value);
        partial void OnActiveKeyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_USER_REFERENCE_COUNTRY", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaSystemModel.FK_USER_REFERENCE_COUNTRY", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaSystemModel.FK_USER_REFERENCE_COUNTRY", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaSystemModel.FK_USER_REFERENCE_COUNTRY", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("MediaSystemModel.FK_USER_REFERENCE_COUNTRY", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATERE_REFERENCE_USER", "DonateRecord")]
        public EntityCollection<DonateRecord> DonateRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonateRecord>("MediaSystemModel.FK_DONATERE_REFERENCE_USER", "DonateRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonateRecord>("MediaSystemModel.FK_DONATERE_REFERENCE_USER", "DonateRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_DONATION_REFERENCE_USER", "DonationProject")]
        public EntityCollection<DonationProject> DonationProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonationProject>("MediaSystemModel.FK_DONATION_REFERENCE_USER", "DonationProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonationProject>("MediaSystemModel.FK_DONATION_REFERENCE_USER", "DonationProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaSystemModel", "FK_ORDERINF_REFERENCE_USER", "OrderInfo")]
        public EntityCollection<OrderInfo> OrderInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderInfo>("MediaSystemModel.FK_ORDERINF_REFERENCE_USER", "OrderInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderInfo>("MediaSystemModel.FK_ORDERINF_REFERENCE_USER", "OrderInfo", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
